// Generated by view binder compiler. Do not edit!
package com.example.restaurant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.restaurant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDishBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnFavorite;

  @NonNull
  public final TextView tvDishCategory;

  @NonNull
  public final TextView tvDishDescription;

  @NonNull
  public final TextView tvDishEmoji;

  @NonNull
  public final TextView tvDishName;

  @NonNull
  public final TextView tvDishPrice;

  @NonNull
  public final TextView tvDishRating;

  private ItemDishBinding(@NonNull LinearLayout rootView, @NonNull Button btnFavorite,
      @NonNull TextView tvDishCategory, @NonNull TextView tvDishDescription,
      @NonNull TextView tvDishEmoji, @NonNull TextView tvDishName, @NonNull TextView tvDishPrice,
      @NonNull TextView tvDishRating) {
    this.rootView = rootView;
    this.btnFavorite = btnFavorite;
    this.tvDishCategory = tvDishCategory;
    this.tvDishDescription = tvDishDescription;
    this.tvDishEmoji = tvDishEmoji;
    this.tvDishName = tvDishName;
    this.tvDishPrice = tvDishPrice;
    this.tvDishRating = tvDishRating;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDishBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDishBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_dish, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDishBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFavorite;
      Button btnFavorite = ViewBindings.findChildViewById(rootView, id);
      if (btnFavorite == null) {
        break missingId;
      }

      id = R.id.tvDishCategory;
      TextView tvDishCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvDishCategory == null) {
        break missingId;
      }

      id = R.id.tvDishDescription;
      TextView tvDishDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDishDescription == null) {
        break missingId;
      }

      id = R.id.tvDishEmoji;
      TextView tvDishEmoji = ViewBindings.findChildViewById(rootView, id);
      if (tvDishEmoji == null) {
        break missingId;
      }

      id = R.id.tvDishName;
      TextView tvDishName = ViewBindings.findChildViewById(rootView, id);
      if (tvDishName == null) {
        break missingId;
      }

      id = R.id.tvDishPrice;
      TextView tvDishPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvDishPrice == null) {
        break missingId;
      }

      id = R.id.tvDishRating;
      TextView tvDishRating = ViewBindings.findChildViewById(rootView, id);
      if (tvDishRating == null) {
        break missingId;
      }

      return new ItemDishBinding((LinearLayout) rootView, btnFavorite, tvDishCategory,
          tvDishDescription, tvDishEmoji, tvDishName, tvDishPrice, tvDishRating);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
